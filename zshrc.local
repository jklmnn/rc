
#git flow completition
if [ -e /usr/share/zsh/vendor-completions/_git-flow ]
then
    source /usr/share/zsh/vendor-completions/_git-flow
fi

#autosuggestion
if [ -e ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]
then
    source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
else
    if [ -e /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]
    then
        source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    fi
fi

#syntax highlighting
if [ -e ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
then
    source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
else
    if [ -e /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
    then
        source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    fi
fi

#alert after long commands
if [ -e ~/.zsh/zlong_alert/zlong_alert.zsh ]
then
    source ~/.zsh/zlong_alert/zlong_alert.zsh
fi

export PATH="$PATH:$HOME/.local/bin"

#rust
export PATH="$PATH:$HOME/.cargo/bin"

#nix
if [ -e /home/jk/.nix-profile/etc/profile.d/nix.sh ]; then . /home/jk/.nix-profile/etc/profile.d/nix.sh; fi

#go
export PATH="$PATH:$HOME/.go/bin"

#disable core dumps
ulimit -c 0

# vim server
alias svim="vim --servername $(hostname)"
alias rvim="vim --servername $(hostname) --remote-tab"

bindkey -M vicmd v edit-command-line

# OPAM configuration
. ~/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# Go
export GOPATH=~/.go

# ssh-agent

FIXED_SSH_AUTH_SOCK="$HOME/.ssh/ssh-agent.sock"
if [ -z $SSH_AGENT -a -z $SSH_AUTH_SOCK ]
then
    export SSH_AUTH_SOCK=$FIXED_SSH_AUTH_SOCK
    ssh-add -l 2>/dev/null >/dev/null
    if [ $? -ge 2 ]
    then
        ssh-agent -a $SSH_AUTH_SOCK >/dev/null
    fi
fi

if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $FIXED_SSH_AUTH_SOCK ]
then
    rm -f $FIXED_SSH_AUTH_SOCK
    ln -sf $SSH_AUTH_SOCK $FIXED_SSH_AUTH_SOCK
    export SSH_AUTH_SOCK=$FIXED_SSH_AUTH_SOCK
fi

# https://gist.github.com/florianschmidt1994/64d6f5b58a84c77802cce5e415d7e3dc
if [ $(command -v fzf) ]
then

    function fh() {
        command=$(fc -ln 0|               # show history without line numbers
        awk '!x[$0]++'  |               # drop duplicates (https://unix.stackexchange.com/a/193331)
        fzf -e +s \
            --tac \
            --color=light \
            --height=20 \
            --inline-info \
            --border \
            --prompt="Search history "  # fuzzy find with exact match, no sorting and custom style
        )

        if [[ !  -z  $param  ]]; then
            BUFFER=$BUFFER
            zle redisplay     # redisplay the current command prompt line
        else
            # See http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Zle-Widgets
            # for more details on this
            BUFFER=$command   # replace the buffer of the command prompt with our command
            zle redisplay     # redisplay the current command prompt line
            zle accept-line   # accept the current line in buffer a.k.a "press enter"
        fi
    }

    zle -N fh           # Run my as a zsh widget / line editor thing
    bindkey "\C-r" fh   # Bind our function to ctrl-r

fi

function virtual_env_prompt () {
  REPLY=${VIRTUAL_ENV+(${VIRTUAL_ENV:t}) }
}
grml_theme_add_token virtual-env -f virtual_env_prompt '%F{magenta}' '%f'

#lmod
if [ -e /etc/profile.d/lmod.sh ]
then
    source /etc/profile.d/lmod.sh
    export MODULEPATH="$HOME/.config/lmod/modulefiles:$MODULEPATH"
elif [ -e /etc/profile.d/modules.sh ]
then
    source /etc/profile.d/modules.sh
    export MODULEPATH="$HOME/.config/lmod/modulefiles:$MODULEPATH"
fi

HISTSIZE=1000000
SAVEHIST=1000000
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_reduce_blanks
setopt hist_verify

zstyle ':prompt:grml:left:setup' items time rc change-root user at host path virtual-env vcs percent
